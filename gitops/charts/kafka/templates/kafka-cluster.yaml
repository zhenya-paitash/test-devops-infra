apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: my-cluster
  labels:
    app: strimzi
spec:
  kafka:
    version: {{ .Values.kafka.version }}
    image: {{ .Values.kafka.image | default (printf "quay.io/strimzi/kafka:%s-kafka-%s" .Chart.AppVersion .Values.kafka.version) }}
    replicas: {{ .Values.kafka.replicas }}
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
    config:
      offsets.topic.replication.factor: 1
      transaction.state.log.replication.factor: 1
      transaction.state.log.min.isr: 1
      default.replication.factor: 1
      min.insync.replicas: 1
      inter.broker.protocol.version: "{{ .Values.kafka.version }}"
    storage:
      type: {{ .Values.kafka.storage.type }}
      {{- if eq .Values.kafka.storage.type "jbod" }}
      volumes:
      - id: 0
        type: persistent-claim
        size: {{ .Values.kafka.storage.size }}
        deleteClaim: false
      {{- else }}
      size: {{ .Values.kafka.storage.size }}
      deleteClaim: false
      {{- end }}
    {{- if .Values.kafka.kafkaExporter.enabled }}
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: kafka-metrics-config.yml
    {{- end }}
    resources:
{{ toYaml .Values.resources.kafka | indent 6 }}
  zookeeper:
    replicas: 0
  entityOperator:
    topicOperator:
      resources:
{{ toYaml .Values.resources.topicOperator | indent 8 }}
    userOperator:
      resources:
{{ toYaml .Values.resources.userOperator | indent 8 }}
