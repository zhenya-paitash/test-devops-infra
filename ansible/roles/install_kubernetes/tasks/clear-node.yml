---
# tasks/clear-node.yml - Distribution-agnostic cleanup

- name: Check if kubeadm exists
  become: true
  ansible.builtin.stat:
    path: /usr/bin/kubeadm
  register: kubeadm_binary

- name: Reset the cluster state if kubeadm is present
  become: true
  ansible.builtin.command: kubeadm reset -f
  when: kubeadm_binary.stat.exists
  ignore_errors: true

- name: Get list of all services
  become: true
  ansible.builtin.service_facts:

- name: Stop related services if they exist
  become: true
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: stopped
    enabled: no
  loop:
    - kubelet
    - containerd
  when: "item in ansible_facts.services"
  ignore_errors: true

- name: Unhold Kubernetes packages (Debian)
  ansible.builtin.dpkg_selections:
    name: "{{ item }}"
    selection: install
  loop: [ 'kubelet', 'kubeadm', 'kubectl' ]
  when: ansible_os_family == "Debian"
  ignore_errors: true

- name: Remove Kubernetes and container packages
  become: true
  ansible.builtin.package:
    name:
      - kubelet
      - kubeadm
      - kubectl
      - kubernetes-cni
      - containerd.io
      - containerd
    state: absent
  ignore_errors: true

- name: Remove Kubernetes configuration directories
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/kubernetes
    - /var/lib/kubelet
    - /var/lib/etcd
    - /etc/cni/net.d

- name: Clean up user kubeconfig
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: absent

- name: Reload systemd daemon
  become: true
  ansible.builtin.systemd:
    daemon_reload: yes
