---
# Tasks for control-plane node

- name: Initialize the Kubernetes cluster using kubeadm
  become: true
  ansible.builtin.command: "kubeadm init --pod-network-cidr={{ pod_network_cidr }} --kubernetes-version v{{ kube_version }} --upload-certs"
  args:
    creates: /etc/kubernetes/admin.conf
  register: kubeadm_init

- name: Restart kubelet to apply new configuration
  become: true
  ansible.builtin.systemd:
    name: kubelet
    state: restarted
    daemon_reload: yes

- name: Set up kubeconfig for ansible user and root
  become: true
  block:
    - name: Create .kube directory for user
      ansible.builtin.file:
        path: "/home/{{ ansible_user }}/.kube"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'

    - name: Copy admin.conf to user's kubeconfig
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: "/home/{{ ansible_user }}/.kube/config"
        remote_src: true
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0600'

    - name: Create .kube directory for root
      ansible.builtin.file:
        path: /root/.kube
        state: directory
        mode: '0755'

    - name: Copy admin.conf to root's kubeconfig
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: /root/.kube/config
        remote_src: true
        mode: '0600'

- name: Check for existing kubeconfig on local machine
  delegate_to: localhost
  become: false
  ansible.builtin.stat:
    path: "{{ lookup('env', 'HOME') }}/.kube/config"
  register: local_kubeconfig

- name: Back up existing kubeconfig on local machine
  delegate_to: localhost
  become: false
  ansible.builtin.copy:
    src: "{{ lookup('env', 'HOME') }}/.kube/config"
    dest: "{{ lookup('env', 'HOME') }}/.kube/config.bak.{{ ansible_date_time.iso8601_basic_short }}"
    remote_src: no
  when: local_kubeconfig.stat.exists

- name: Fetch kubeconfig to local machine
  ansible.builtin.fetch:
    src: /etc/kubernetes/admin.conf
    dest: "{{ lookup('env', 'HOME') }}/.kube/config"
    flat: yes
  become: true

- name: Install CNI network plugin
  ansible.builtin.command: "kubectl apply -f {{ cni_manifest_url }}"
  args:
    creates: /etc/cni/net.d/10-calico.conflist # This is an example path for Calico
  changed_when: true
  delegate_to: localhost
  become: false

- name: Generate a token for workers to join
  become: true
  ansible.builtin.command: kubeadm token create --print-join-command
  register: join_command_raw
  changed_when: true

- name: Store join command for other hosts
  ansible.builtin.set_fact:
    join_command: "{{ join_command_raw.stdout }}"
  delegate_to: localhost
  delegate_facts: true
  become: false

- name: (Optional) Remove taint from control-plane node
  ansible.builtin.command: "kubectl taint nodes --all node-role.kubernetes.io/control-plane:NoSchedule-"
  when: remove_control_plane_taint | default(false)
  changed_when: true
  delegate_to: localhost
  become: false

- name: Apply local-path-provisioner manifest
  ansible.builtin.command:
    cmd: kubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/v0.0.26/deploy/local-path-storage.yaml
  changed_when: true
  delegate_to: localhost
  become: false